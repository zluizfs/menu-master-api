generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_PRISMA_URL")
}

model AddressUser {
  user      User    @relation(fields: [userId], references: [userId])
  userId    Int
  address   Address @relation(fields: [addressId], references: [addressId])
  addressId Int

  @@id([userId, addressId])
}

model Address {
  addressId    Int           @id @default(autoincrement())
  street       String        @db.VarChar(100)
  number       Int
  neighborhood String        @db.VarChar(100)
  city         String        @db.VarChar(150)
  state        String        @db.VarChar(2)
  landmark     String        @db.VarChar(50)
  complement   String        @db.VarChar(50)
  users        AddressUser[]
  restaurants  Restaurant[]
}

model User {
  userId      Int           @id @default(autoincrement())
  name        String        @db.VarChar(150)
  email       String        @unique @db.VarChar(254)
  password    String        @db.VarChar(250)
  phoneNumber String        @db.VarChar(11)
  createdAt   DateTime      @default(now())
  addresses   AddressUser[]
  order       Order[]
}

model Restaurant {
  id                     Int                      @id @default(autoincrement())
  name                   String                   @db.VarChar(150)
  description            String                   @db.VarChar(250)
  imageUrl               String                   @db.VarChar(150)
  phoneNumber            String                   @db.VarChar(11)
  rating                 Float
  addressId              Int
  address                Address                  @relation(fields: [addressId], references: [addressId])
  restaurantOpeningHours RestaurantOpeningHours[]
  orders                 Order[]
  dishes                 Dish[]
}

model RestaurantOpeningHours {
  restaurantOpeningHoursId Int        @id @default(autoincrement()) @db.TinyInt
  restaurantId             Int
  day                      Int        @db.TinyInt
  openTime                 DateTime   @db.Time()
  closeTime                DateTime   @db.Time()
  restaurants              Restaurant @relation(fields: [restaurantId], references: [id])
}

model DishesCategory {
  dishesCategoryId Int    @id @default(autoincrement()) @db.TinyInt
  description      String @db.VarChar(50)
  dishes           Dish[]
}

model Dish {
  dishId                Int                     @id @default(autoincrement())
  name                  String                  @db.VarChar(150)
  description           String                  @db.VarChar(500)
  price                 Decimal                 @db.Decimal(15, 2)
  imageUrl              String                  @db.VarChar(150)
  dishesCategoryId      Int                     @db.TinyInt
  dishesCategory        DishesCategory          @relation(fields: [dishesCategoryId], references: [dishesCategoryId])
  restaurantId          Int
  restaurant            Restaurant              @relation(fields: [restaurantId], references: [id])
  orderRestaurantDishes OrderRestaurantDishes[]
}

model Order {
  orderId               Int                     @id @default(autoincrement())
  restaurantId          Int
  userId                Int
  total                 Decimal                 @db.Decimal(15, 2)
  user                  User                    @relation(fields: [userId], references: [userId])
  restaurant            Restaurant              @relation(fields: [restaurantId], references: [id])
  createdAt             DateTime                @default(now())
  orderRestaurantDishes OrderRestaurantDishes[]
}

model OrderRestaurantDishes {
  orderId Int
  dishId  Int
  orders  Order @relation(fields: [orderId], references: [orderId])
  dishes  Dish  @relation(fields: [dishId], references: [dishId])

  @@id([orderId])
}
